{
  lib,
  config,
  pkgs,
  ...
}: let
  cfg = config.programs.argon;

  packages = import ../packages {inherit pkgs;};
in {
  options = {
    programs.argon = {
      one = {
        enable = lib.mkEnableOption "Enable argononed service";

        package = lib.mkOption {
          type = lib.types.package;
          default = packages.argononed;
        };

        settings = {
          displayUnits = lib.mkOption {
            type = lib.types.enum ["celsius" "fahrenheit"];
            default = "celsius";
          };

          fanspeed = lib.mkOption {
            type = lib.types.listOf (lib.types.submodule {
              options = {
                temperature = lib.mkOption {
                  type = lib.types.ints.unsigned;
                  description = "The temperature to activate this fan speed at";
                };

                speed = lib.mkOption {
                  type = lib.types.ints.unsigned;
                  description = "The speed the fans will be running at (as a percentage)";
                };
              };
            });

            default = [
              {
                temperature = 55;
                speed = 30;
              }
              {
                temperature = 60;
                speed = 55;
              }
              {
                temperature = 65;
                speed = 100;
              }
            ];
          };
        };
      };

      eon = {
        enable = lib.mkEnableOption "Enable argoneond service";

        package = lib.mkOption {
          type = lib.types.package;
          default = packages.argoneond;
        };

        settings = {
          oled = {
            switchDuration = lib.mkOption {
              type = lib.types.ints.unsigned;
              default = 30;
            };

            screenList = lib.mkOption {
              type = lib.types.listOf (lib.types.enum ["clock" "cpu" "storage" "raid" "ram" "temp" "ip"]);
              default = ["clock" "cpu" "storage" "raid" "ram" "temp" "ip"];
            };
          };

          # rtc = {
          # };
        };
      };
    };
  };

  config = {
    environment.systemPackages =
      (lib.optional cfg.one.enable cfg.one.package)
      ++ lib.optional cfg.eon.enable cfg.eon.package;

    environment.etc = {
      "argonunits.conf" = lib.mkIf cfg.one.enable (let
        mappings = {
          "celsius" = "C";
          "fahrenheit" = "F";
        };
      in {
        text = ''
          #
          # Argon Unit Configuration
          # Generated by NixOS
          #
          temperature=${mappings."${cfg.one.settings.displayUnits}"}
        '';
        mode = "0666";
      });

      "argononed.conf" = lib.mkIf cfg.one.enable {
        text = ''
          #
          # Argon Fan Speed Configuration (CPU)
          # Generated by NixOS
          #
          ${lib.concatMapStringsSep "\n" ({
            speed,
            temperature,
          }: "${toString temperature}=${toString speed}")
          cfg.one.settings.fanspeed}
        '';
        mode = "0666";
      };

      "argoneonoled.conf" = lib.mkIf cfg.eon.enable {
        text = ''
          #
          # Argon OLED Configuration
          # Generated by NixOS
          #
          switchduration=${toString cfg.eon.settings.oled.switchDuration}
          screenlist="${lib.concatStringsSep " " cfg.eon.settings.oled.screenList}"
        '';
        mode = "0666";
      };

      "argoneonrtc.conf" = lib.mkIf cfg.eon.enable {
        text = ''
          #
          # Argon RTC Configuration
          # Generated by NixOS
          #
        '';
        mode = "0666";
      };
    };

    systemd.services = {
      argononed = lib.mkIf cfg.one.enable {
        description = "Argon One Fan and Button Service";
        after = ["multi-user.target"];
        wantedBy = ["multi-user.target"];

        serviceConfig = {
          Type = "simple";
          Restart = "always";
          RemainAfterExit = true;
          ExecStart = "${cfg.one.package}/bin/argononed SERVICE";
        };
      };

      argoneond = lib.mkIf cfg.eon.enable {
        description = "Argon EON RTC Service";
        after = ["multi-user.target"];
        wantedBy = ["multi-user.target"];

        serviceConfig = {
          Type = "simple";
          Restart = "always";
          RemainAfterExit = true;
          ExecStart = "${cfg.eon.package}/bin/argoneond SERVICE";
        };
      };
    };
  };
}
