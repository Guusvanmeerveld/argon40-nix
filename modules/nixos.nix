{
  lib,
  config,
  pkgs,
  ...
}: let
  cfg = config.programs.argonone;

  package = pkgs.callPackage ../package.nix {};
in {
  options = {
    programs.argonone = {
      enable = lib.mkEnableOption "Enable argonone service";

      settings = {
        fanspeed = lib.mkOption {
          type = lib.types.listOf (lib.types.submodule {
            options = {
              temperature = lib.mkOption {
                type = lib.types.ints.unsigned;
                description = "The temperature to activate this fan speed at";
              };

              speed = lib.mkOption {
                type = lib.types.ints.unsigned;
                description = "The speed the fans will be running at (as a percentage)";
              };
            };
          });

          default = [
            {
              temperature = 55;
              speed = 30;
            }
            {
              temperature = 60;
              speed = 55;
            }
            {
              temperature = 65;
              speed = 100;
            }
          ];
        };
      };
    };
  };

  config = lib.mkIf cfg.enable {
    environment.etc = {
      "argonunits.conf" = {
        text = ''
          #
        '';
        mode = "0666";
      };
      "argononed.conf" = {
        text = ''
          #
          # Argon Fan Speed Configuration (CPU)
          # Generated by NixOS
          #
          ${lib.concatMapStringsSep "\n" ({
            speed,
            temperature,
          }: "${toString temperature}=${toString speed}")
          cfg.settings.fanspeed}
        '';
        mode = "0666";
      };
    };

    systemd.services.argonone = {
      description = "Argon One Fan and Button Service";
      after = ["multi-user.target"];
      wantedBy = ["multi-user.target"];

      serviceConfig = {
        Type = "simple";
        Restart = "always";
        RemainAfterExit = true;
        ExecStart = "${package}/bin/argonone SERVICE";
      };
    };
  };
}
